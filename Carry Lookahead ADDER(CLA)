module CLA(A,B,ci,co,S);// A,B=> 4bit inputs,,,, ci = carry_in,,,,, co= output carry,,,,, S= 4bit sum
output [3:0] S; //4 bit output
output co;
input [3:0] A,B;
input ci;

wire [3:0]G,P,C;
 assign G = A&B; // carry generate
 assign P = A^B; // carry propagate
 assign co=G[3]+ (P[3]&G[2]) + (P[3]&P[2]&G[1]) +  (P[3]&P[2]&P[1]&G[0]) + (P[3]&P[2]&P[1]&P[0]&ci);
 assign C[3]=G[2] + (P[2]&G[1]) + (P[2]&P[1]&G[0]) +  (P[2]&P[1]&P[0]&ci);
 assign C[2]=G[1] + (P[1]&G[0]) + (P[1]&P[0]&ci);
 assign C[1]=G[0] + (P[0]&ci);
 assign C[0]=ci;
 assign S = P^C ;
endmodule
